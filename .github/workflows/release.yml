# This is a basic workflow to help you get started with Actions

name: deploy-on-branch-created

# Controls when the workflow will run
on:
  create:
    branches:
      - 'release/**'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Verify branch name
        id: verify_branch
        run: |
          GITHUB_REF=${{ github.ref }}
          # Remove the prefix 'refs/heads/' to get the branch name
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
          if [[ ! "$env.BRANCH_NAME" =~ ^release/ ]]; then
            echo "Branch name does not match pattern. Exiting."
            exit 1
          fi

      - name: List files in repository root
        run: |
          echo "List File"
          ls -la
      # Runs a single command using the runners shell
      - name: Extract branch name
        id: extract_branch
        run: |
          # Extract the full reference of the branch
          GITHUB_REF=${{ github.ref }}
          # Remove the prefix 'refs/heads/' to get the branch name
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          # Output the values for logging purposes
          echo "Github Ref is $GITHUB_REF"
          echo "Branch Name is $BRANCH_NAME"
          # Write the variables to the $GITHUB_ENV file to make them available in subsequent steps
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
          echo "GITHUB_REF=$GITHUB_REF" >> $GITHUB_ENV

      - name: Use branch name
        run: |
          # Access the environment variables using the ${{ env.VARIABLE_NAME }} syntax
          echo "The created branch is ${{ env.BRANCH_NAME }}"
          echo "Github Ref is ${{ env.GITHUB_REF }}"
          
